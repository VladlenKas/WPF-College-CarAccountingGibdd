<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:icons="http://materialdesigninxaml.net/winfx/xaml/themes">
    
    <!--#region Иконки -->
    <Style TargetType="icons:PackIcon" x:Key="Icon.Small">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>

    <Style TargetType="icons:PackIcon" x:Key="Icon.SmallMedium">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Width" Value="18"/>
    </Style>
    
    <Style TargetType="icons:PackIcon" x:Key="Icon.Medium">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
    </Style>
    
    <Style TargetType="icons:PackIcon" x:Key="Icon.Large">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
    </Style>
    
    <Style TargetType="icons:PackIcon" x:Key="Icon.Navigation">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
    </Style>
    <!--#endregion-->

    <!--#region Тени -->
    <DropShadowEffect x:Key="Shadow.Small.Effect" 
                      Color="{StaticResource Shadow.Base.Color}" 
                      BlurRadius="4" 
                      Opacity="0.1" 
                      Direction="270" 
                      ShadowDepth="2"/>
    <!--#endregion-->

    <!--#region Тексты -->
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlock.H1">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlock.H6">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Secondary.Brush}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlock.H2">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlock.Normal">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Secondary.Brush}"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="TextBlock.Subtitle">
        <Setter Property="TextAlignment" Value="Justify"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
        <Setter Property="Margin" Value="0 10 0 5"/>
        <Setter Property="Opacity" Value="0.8"/>
    </Style>

    <Style TargetType="{x:Type Run}" x:Key="Run.Subtitle">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
    </Style>    
    
    <Style TargetType="{x:Type Run}" x:Key="Run.Description">
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Secondary.Brush}"/>
    </Style>
    <!--#endregion-->

    <!--#region Текстовые поля -->
    <!--#region Поле для текста -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border.Static.Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="18 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <Grid IsHitTestVisible="False"
                              Cursor="{TemplateBinding Cursor}">

                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="False"/>

                            <TextBlock x:Name="placeholder"
                                       Padding="20 0"
                                       IsHitTestVisible="False"
                                       Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                       FontFamily="SF Pro Text"
                                       Visibility="Collapsed"
                                       FontSize="14"
                                       Foreground="{StaticResource Text.Static.Brush}"
                                       FontWeight="SemiBold"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="placeholder" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Border.Focused.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="placeholder" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Border.Focused.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Поле для пароля -->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Border.Static.Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="18 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <Grid IsHitTestVisible="False"
                              Cursor="{TemplateBinding Cursor}">

                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Focusable="False"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Border.Focused.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Border.Focused.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Кнопки -->
    <!--#region Приоритетная -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Primary">
        <Setter Property="Background" Value="{StaticResource Button.Primary.Background.Static.Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Inverted.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Primary.Border.Static.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center">
                        </ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Primary.Background.Hover.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Primary.Border.Hover.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Primary.Background.Pressed.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Primary.Border.Pressed.Brush}"/>
                        <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource Background.Disabled.Brush}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Обычная -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Ordinary">
        <Setter Property="Background" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Border.Static.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center">
                        </ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Border.Hover.Brush}"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Background.Hover.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Border.Pressed.Brush}"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Background.Pressed.Brush}"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Приоритетная с иконкой -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Primary.Icon">
        <Setter Property="Background" Value="{StaticResource Button.Primary.Background.Static.Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Inverted.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Primary.Border.Static.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <StackPanel Orientation="Horizontal" 
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">

                            <icons:PackIcon Name="icon"
                                            Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                            Style="{StaticResource Icon.Medium}"
                                            Margin="0 0 5 0"/>

                            <TextBlock Name="content"
                                       Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"/>
                            
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Primary.Background.Hover.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Primary.Border.Hover.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Primary.Background.Pressed.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Primary.Border.Pressed.Brush}"/>
                            <Setter TargetName="border" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource Background.Disabled.Brush}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Иконка средняя -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Icon.Medium">
        <Setter Property="Background" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Secondary.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <icons:PackIcon Name="icon"
                                        Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                        Style="{StaticResource Icon.SmallMedium}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Background.Hover.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Hover.Brush}"/>
                            <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Background.Pressed.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Pressed.Brush}"/>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource Background.Disabled.Brush}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Иконка большая -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Icon.Large">
        <Setter Property="Background" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <icons:PackIcon Name="icon"
                                        Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                        Style="{StaticResource Icon.Medium}"
                                        Margin="12"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Background.Hover.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Hover.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Background.Pressed.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Pressed.Brush}"/>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource Background.Disabled.Brush}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Иконка Прозрачная -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Icon.Transperent">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Cursor="Hand"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <icons:PackIcon Name="icon"
                                        Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                        Style="{StaticResource Icon.Medium}"
                                        Foreground="{StaticResource Text.Static.Brush}"
                                        Margin="12"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            <Setter TargetName="icon" Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <!-- Триггер для неактивной кнопки -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Навигационная кнопка (RadioButton)-->
    <Style TargetType="{x:Type RadioButton}" x:Key="RadioButton.Navigation">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Width" Value="195"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            
                            <icons:PackIcon Name="icon"
                                            Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                            Style="{StaticResource Icon.Navigation}"
                                            Margin="0 0 6 0"/>
                            
                            <TextBlock Name="content"
                                       Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"/>
                            
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Активна -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Background.Control.Brush}"/>
                            <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
                            <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Primary.Static.Brush}"/>
                            <Setter TargetName="content" Property="Foreground" Value="{StaticResource Primary.Static.Brush}"/>
                        </Trigger>

                        <!-- Не активна + не нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Primary.Background.Static.Brush}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Primary.Background.Static.Brush}"/>
                                <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter TargetName="content" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + наведена -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Primary.Background.Static.Brush}"/>
                                <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter TargetName="content" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Primary.Static.Brush}"/>
                                <Setter TargetName="content" Property="Foreground" Value="{StaticResource Primary.Static.Brush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Отключённая кнопка -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        <!--#endregion-->

    <!--#region Навигационная кнопка (Button) -->
    <Style TargetType="{x:Type Button}" x:Key="Button.Navigator">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12"/>
        <Setter Property="Width" Value="195"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="10">

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">

                            <icons:PackIcon Name="icon"
                                            Kind="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                                            Style="{StaticResource Icon.Navigation}"
                                            Margin="0 0 6 0"/>

                            <TextBlock Name="content"
                                       Text="{TemplateBinding Content}"
                                       VerticalAlignment="Center"/>

                        </StackPanel>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <!-- Не активна + не нажата (базовое состояние) -->
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Primary.Background.Static.Brush}"/>
                            <Setter Property="Background" Value="{StaticResource Button.Primary.Background.Static.Brush}"/>
                            <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                            <Setter TargetName="content" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                        </Trigger>

                        <!-- Не активна + наведена -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{StaticResource Background.Control.Brush}"/>
                            <Setter Property="Background" Value="{StaticResource Button.Primary.Background.Static.Brush}"/>
                            <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                            <Setter TargetName="content" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                        </MultiTrigger>

                        <!-- Не активна + нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Background.Control.Brush}"/>
                            <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
                            <Setter TargetName="icon" Property="Foreground" Value="{StaticResource Primary.Static.Brush}"/>
                            <Setter TargetName="content" Property="Foreground" Value="{StaticResource Primary.Static.Brush}"/>
                        </MultiTrigger>

                        <!-- Отключённая кнопка -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Чек боксы -->
    <!--#region Стандартный стиль -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal">

                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="5">
                            <Grid>
                                <Rectangle Margin="10"/>

                                <icons:PackIcon Name="watermark"
                                                Kind="Check"
                                                Style="{StaticResource Icon.Small}"
                                                Foreground="{StaticResource Border.Static.Brush}"/>
                            </Grid>
                        </Border>

                        <TextBlock Name="placeholder" 
                                   Margin="6 0 0 0"
                                   Text="{TemplateBinding Content}"
                                   Style="{StaticResource TextBlock.Normal}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </StackPanel>

                    <ControlTemplate.Triggers>

                        <!-- Не активна + не нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource Border.Static.Brush}"/>
                                <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter TargetName="watermark" Property="Foreground" Value="{StaticResource Border.Static.Brush}"/>
                                <Setter TargetName="placeholder" Property="Foreground" Value="{StaticResource Text.Static.Brush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + наведена -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource Border.Focused.Brush}"/>
                                <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter TargetName="watermark" Property="Foreground" Value="{StaticResource Border.Focused.Brush}"/>
                                <Setter TargetName="placeholder" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Не активна + нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource Border.Focused.Brush}"/>
                                <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter TargetName="watermark" Property="Foreground" Value="{StaticResource Border.Focused.Brush}"/>
                                <Setter TargetName="placeholder" Property="Foreground" Value="{StaticResource Text.Static.Brush}"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="1"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Активна + не нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource Border.Focused.Brush}"/>
                                <Setter Property="Background" Value="{StaticResource Border.Focused.Brush}"/>
                                <Setter TargetName="watermark" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter TargetName="placeholder" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Активна + наведена -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource Primary.Hover.Brush}"/>
                                <Setter Property="Background" Value="{StaticResource Primary.Hover.Brush}"/>
                                <Setter TargetName="watermark" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter TargetName="placeholder" Property="Foreground" Value="{StaticResource Text.Static.Brush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <!-- Активна + нажата -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsPressed" Value="True"/>
                            </MultiTrigger.Conditions>

                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource Primary.Pressed.Brush}"/>
                                <Setter Property="Background" Value="{StaticResource Primary.Pressed.Brush}"/>
                                <Setter TargetName="watermark" Property="Foreground" Value="{StaticResource Background.Control.Brush}"/>
                                <Setter TargetName="placeholder" Property="Foreground" Value="{StaticResource Text.Static.Brush}"/>
                                <Setter Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="1"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Для сортировки (убывание / возрастание) -->
    <Style TargetType="{x:Type CheckBox}" x:Key="CheckBox.Ascending">
        <Setter Property="Background" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="ToolTip" Value="Сортировка по возрастанию"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                        <Grid>
                            <icons:PackIcon Name="waterMark"
                                            Kind="ChevronDoubleUp"
                                            Foreground="{StaticResource Text.Secondary.Brush}"
                                            Width="24"
                                            Height="24"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="waterMark" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Hover.Brush}"/>
                            <Setter Property="Background" Value="{StaticResource Button.Background.Hover.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="waterMark" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Pressed.Brush}"/>
                            <Setter Property="Background" Value="{StaticResource Button.Background.Pressed.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="waterMark" Property="Kind" Value="ChevronDoubleDown"/>
                            <Setter Property="ToolTip" Value="Сортировка по убыванию"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Комбобоксы -->
    <!--#region Фильтр -->
    <Style TargetType="{x:Type ComboBox}" x:Key="ComboBox.Filter">
        <Setter Property="Background" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Secondary.Brush}"/>
        <Setter Property="Padding" Value="12 8"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10"
                                SnapsToDevicePixels="True">

                            <Grid>
                                <ContentPresenter x:Name="ContentSite"
                                                  Margin="32 0 0 0"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  Content="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectedValue}"/>

                                <TextBlock x:Name="placeholderText"
                                           Margin="32 0 0 0"
                                           IsHitTestVisible="False"
                                           Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                           FontFamily="SF Pro Text"
                                           Visibility="Collapsed"
                                           FontSize="14"
                                           Foreground="{StaticResource Text.Secondary.Brush}"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"/>

                                <icons:PackIcon x:Name="arrowIcon"
                                                Kind="FilterOutline"
                                                Width="24"
                                                Height="24"
                                                Foreground="{StaticResource Text.Secondary.Brush}"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"/>

                                <ToggleButton x:Name="toggleButton"
                                              Opacity="0"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>
                            </Grid>
                        </Border>

                        <Popup Name="Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Focusable="False"
                               PopupAnimation="Slide"
                               AllowsTransparency="True"
                               Placement="Bottom">
                            <Border x:Name="dropDownBorder"
                                    Background="{StaticResource Background.Control.Brush}"
                                    CornerRadius="10"
                                    Margin="0 4 0 0"
                                    BorderThickness="1"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    BorderBrush="{StaticResource Background.Control.Brush}">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Placeholder Text -->
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="arrowIcon" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            <Setter TargetName="placeholderText" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Background.Hover.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Hover.Brush}"/>
                        </Trigger>

                        <Trigger SourceName="toggleButton" Property="IsChecked" Value="True">
                            <Setter TargetName="arrowIcon" Property="Kind" Value="ChevronUp"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Сортировка -->
    <Style TargetType="{x:Type ComboBox}" x:Key="ComboBox.Sorter">
        <Setter Property="Background" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Static.Brush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{StaticResource Text.Secondary.Brush}"/>
        <Setter Property="Padding" Value="12 8"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10"
                                SnapsToDevicePixels="True">

                            <Grid>
                                <ContentPresenter x:Name="ContentSite"
                                                  Margin="32 0 0 0"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  Content="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentStringFormat="{TemplateBinding SelectedValue}"/>

                                <TextBlock x:Name="placeholderText"
                                           Margin="32 0 0 0"
                                           IsHitTestVisible="False"
                                           Text="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                           FontFamily="SF Pro Text"
                                           Visibility="Collapsed"
                                           FontSize="14"
                                           Foreground="{StaticResource Text.Secondary.Brush}"
                                           FontWeight="SemiBold"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"/>

                                <icons:PackIcon x:Name="arrowIcon"
                                                Kind="Sort"
                                                Width="24"
                                                Height="24"
                                                Foreground="{StaticResource Text.Secondary.Brush}"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"/>

                                <ToggleButton x:Name="toggleButton"
                                              Opacity="0"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              Focusable="False"
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"/>
                            </Grid>
                        </Border>

                        <Popup Name="Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Focusable="False"
                               PopupAnimation="Slide"
                               AllowsTransparency="True"
                               Placement="Bottom">
                            <Border x:Name="dropDownBorder"
                                    Background="{StaticResource Background.Control.Brush}"
                                    CornerRadius="10"
                                    Margin="0 4 0 0"
                                    BorderThickness="1"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    BorderBrush="{StaticResource Background.Control.Brush}">
                                <ScrollViewer>
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Placeholder Text -->
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <!-- Hover State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="arrowIcon" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            <Setter TargetName="placeholderText" Property="Foreground" Value="{StaticResource Text.Primary.Brush}"/>
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Background.Hover.Brush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Button.Background.Hover.Brush}"/>
                        </Trigger>

                        <Trigger SourceName="toggleButton" Property="IsChecked" Value="True">
                            <Setter TargetName="arrowIcon" Property="Kind" Value="ChevronUp"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Стандартный стиль объектов комбобокса -->
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="SF Pro Text"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="18 10"
                            CornerRadius="10">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#endregion-->

    <!--#region Скроллы -->
    <!-- Стиль для ScrollBar в ItemsControl-->
    <Style TargetType="{x:Type ScrollViewer}" x:Key="ScrollViewer.Standart">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Контент -->
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0"/>

                        <!-- Вертикальный скроллбар -->
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Grid.Row="0"
                                   Orientation="Vertical"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                            <ScrollBar.Style>
                                <Style TargetType="{x:Type ScrollBar}">
                                    <Setter Property="Background" Value="{StaticResource Background.Control.Brush}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                <Grid>
                                                    <Border CornerRadius="8"
                                                            Background="{TemplateBinding Background}"/>
                                                    <Track x:Name="PART_Track"
                                                           IsDirectionReversed="True">
                                                        <Track.Thumb>
                                                            <Thumb>
                                                                <Thumb.Style>
                                                                    <Style TargetType="{x:Type Thumb}">
                                                                        <Setter Property="Background" Value="{StaticResource Primary.Static.Brush}"/>
                                                                        <Setter Property="Margin" Value="4.5"/>
                                                                        <Setter Property="BorderThickness" Value="0"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                                                    <Border CornerRadius="4"
                                                                                            Background="{TemplateBinding Background}"
                                                                                            BorderThickness="0">
                                                                                    </Border>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Style.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Background" Value="{StaticResource Primary.Hover.Brush}"/>
                                                                                <!-- Серый при наведении -->
                                                                            </Trigger>
                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                <Setter Property="Background" Value="{StaticResource Primary.Pressed.Brush}"/>
                                                                                <!-- Темно-серый при нажатии -->
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Thumb.Style>
                                                            </Thumb>
                                                        </Track.Thumb>
                                                    </Track>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ScrollBar.Style>
                        </ScrollBar>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Карточки -->
    <Style TargetType="Border" x:Key="Border.Card">
    </Style>
    <!--#endregion-->
</ResourceDictionary>